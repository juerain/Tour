{"remainingRequest":"C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\src\\components\\ch\\common\\second-search\\Regist.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\src\\components\\ch\\common\\second-search\\Regist.vue","mtime":1566264008785},{"path":"C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1565867196132},{"path":"C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1565790042884},{"path":"C:\\Users\\web\\Desktop\\团队项目二\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1565790057597}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      phone: \"\",\n      email: \"\",\n      upwd: \"\"\n    };\n  },\n  methods: {\n    // 手机和邮箱的div转换方法\n    change: function change(e) {\n      var phone = document.getElementById(\"phone\");\n      var phoneDiv = document.getElementById(\"phone_div\");\n      var email = document.getElementById(\"email\");\n      var emailDiv = document.getElementById(\"email_div\");\n\n      if (e.target == email) {\n        phoneDiv.style.display = \"none\";\n        emailDiv.style.display = \"\";\n      }\n\n      if (e.target == phone) {\n        phoneDiv.style.display = \"\";\n        emailDiv.style.display = \"none\";\n      }\n    },\n    // 手机输入框失去焦点方法\n    phon: function phon() {\n      var _this = this;\n\n      if (this.phone !== \"\") {\n        // 用户名正则\n        var regPhone = new RegExp(/^1[3456789]\\d{9}$/); // 判断格式是否正确\n\n        if (regPhone.test(this.phone) === false) {\n          this.$toast(\"手机格式不正确\");\n        } else {\n          // 获取手机号\n          var phone = this.phone;\n          var obj = {\n            phone: phone\n          };\n          console.log(1);\n          this.axios(\"regist\", {\n            params: obj\n          }).then(function (res) {\n            console.log(res); // 获取服务器返回结果\n\n            if (res.data.code == -1) {\n              _this.$toast(\"手机号已经被注册\");\n            } else if (res.data.code == 1) {\n              _this.$toast(\"手机号可用\");\n            }\n          });\n        }\n      }\n    },\n    emai: function emai() {\n      var _this2 = this;\n\n      if (this.email !== \"\") {\n        // 用户名正则\n        var regEmail = new RegExp(\"([0-9A-Za-z-_.]+)@([0-9a-z]+.[a-z]{2,3}(.[a-z]{2})?)$\", \"g\"); // 判断格式是否正确\n\n        if (regEmail.test(this.email) === false) {\n          this.$toast(\"邮箱格式不正确\");\n        }\n      } else {\n        // 获取邮箱\n        var email = this.email;\n        var obj = {\n          email: email\n        };\n        this.axios(\"regist\", {\n          params: obj\n        }).then(function (res) {\n          // console.log(res);\n          // 获取服务器返回结果\n          if (res.data.code == -1) {\n            _this2.$toast(\"邮箱已经被注册\");\n          } else if (res.data.code == 1) {\n            _this2.$toast(\"邮箱可用\");\n          }\n        });\n      }\n    },\n    // 密码输入框失去焦点方法\n    pwd: function pwd() {\n      if (this.upwd !== \"\") {\n        // 密码正则\n        var regPwd = new RegExp(/^[a-zA-Z0-9]{4,10}$/); // 判断格式是否正确\n\n        if (regPwd.test(this.upwd) === false) {\n          this.$toast(\"密码格式不正确\");\n        }\n      }\n    },\n    reg: function reg() {\n      var _this3 = this;\n\n      // 获取用户名\n      var phone = this.phone; // 获取邮箱\n\n      var email = this.email; // 获取用户密码\n\n      var upwd = this.upwd; // 传递的参数\n\n      var obj;\n\n      if (email === \"\") {\n        var obj = {\n          phone: phone,\n          upwd: upwd\n        };\n      } // 用户名正则\n\n\n      var regPhone = new RegExp(/^1[3456789]\\d{9}$/); // 密码正则\n\n      var regPwd = new RegExp(/^[a-zA-Z0-9]{4,10}$/);\n\n      if (regPhone.test(this.phone) === true && regPwd.test(this.upwd) == true) {\n        // 发送ajax请求\n        this.axios(\"regist\", {\n          params: obj\n        }).then(function (res) {\n          // 获取服务器返回结果\n          //   console.log(res);\n          if (res.data.code == 1) {\n            _this3.$router.push(\"/login\");\n          }\n        }); // } else {\n        //   this.$toast(\"请输入正确的手机号和密码\");\n      }\n\n      if (phone === \"\") {\n        var obj = {\n          email: email,\n          upwd: upwd\n        };\n      } //   邮箱正则\n\n\n      var regEmail = new RegExp(\"^([0-9A-Za-z-_.]+)@([0-9a-z]+.[a-z]{2,3}(.[a-z]{2})?)$\", \"g\"); // 密码正则\n\n      var regPwd = new RegExp(/^[a-zA-Z0-9]{4,10}$/);\n\n      if (regEmail.test(this.email) === true && regPwd.test(this.upwd) == true) {\n        // 发送ajax请求\n        this.axios(\"regist\", {\n          params: obj\n        }).then(function (res) {\n          // 获取服务器返回结果\n          //   console.log(res);\n          if (res.data.code == 1) {\n            _this3.$router.push(\"/login\");\n          }\n        }); // } else {\n        //   this.$toast(\"请输入正确的邮箱和密码\");\n      }\n    }\n  }\n};",{"version":3,"sources":["Regist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,aAAA,EAFA;AAGA,YAAA;AAHA,KAAA;AAKA,GAPA;AAQA,WAAA;AACA;AACA,UAFA,kBAEA,CAFA,EAEA;AACA,UAAA,QAAA,SAAA,cAAA,CAAA,OAAA,CAAA;AACA,UAAA,WAAA,SAAA,cAAA,CAAA,WAAA,CAAA;AACA,UAAA,QAAA,SAAA,cAAA,CAAA,OAAA,CAAA;AACA,UAAA,WAAA,SAAA,cAAA,CAAA,WAAA,CAAA;;AACA,UAAA,EAAA,MAAA,IAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,iBAAA,KAAA,CAAA,OAAA,GAAA,EAAA;AACA;;AACA,UAAA,EAAA,MAAA,IAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,OAAA,GAAA,EAAA;AACA,iBAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA;AACA,KAfA;AAgBA;AACA,QAjBA,kBAiBA;AAAA;;AACA,UAAA,KAAA,KAAA,KAAA,EAAA,EAAA;AACA;AACA,YAAA,WAAA,IAAA,MAAA,CAAA,mBAAA,CAAA,CAFA,CAGA;;AACA,YAAA,SAAA,IAAA,CAAA,KAAA,KAAA,MAAA,KAAA,EAAA;AACA,eAAA,MAAA,CAAA,SAAA;AACA,SAFA,MAEA;AACA;AACA,cAAA,QAAA,KAAA,KAAA;AACA,cAAA,MAAA;AAAA,mBAAA;AAAA,WAAA;AACA,kBAAA,GAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,EAAA;AAAA,oBAAA;AAAA,WAAA,EAAA,IAAA,CAAA,eAAA;AACA,oBAAA,GAAA,CAAA,GAAA,EADA,CAEA;;AACA,gBAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,UAAA;AACA,aAFA,MAEA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,OAAA;AACA;AACA,WARA;AASA;AACA;AACA,KAxCA;AAyCA,QAzCA,kBAyCA;AAAA;;AACA,UAAA,KAAA,KAAA,KAAA,EAAA,EAAA;AACA;AACA,YAAA,WAAA,IAAA,MAAA,CACA,uDADA,EAEA,GAFA,CAAA,CAFA,CAMA;;AACA,YAAA,SAAA,IAAA,CAAA,KAAA,KAAA,MAAA,KAAA,EAAA;AACA,eAAA,MAAA,CAAA,SAAA;AACA;AACA,OAVA,MAUA;AACA;AACA,YAAA,QAAA,KAAA,KAAA;AACA,YAAA,MAAA;AAAA,iBAAA;AAAA,SAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,SAAA;AACA,WAFA,MAEA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,MAAA;AACA;AACA,SARA;AASA;AACA,KAlEA;AAmEA;AACA,OApEA,iBAoEA;AACA,UAAA,KAAA,IAAA,KAAA,EAAA,EAAA;AACA;AACA,YAAA,SAAA,IAAA,MAAA,CAAA,qBAAA,CAAA,CAFA,CAGA;;AACA,YAAA,OAAA,IAAA,CAAA,KAAA,IAAA,MAAA,KAAA,EAAA;AACA,eAAA,MAAA,CAAA,SAAA;AACA;AACA;AACA,KA7EA;AA8EA,OA9EA,iBA8EA;AAAA;;AACA;AACA,UAAA,QAAA,KAAA,KAAA,CAFA,CAGA;;AACA,UAAA,QAAA,KAAA,KAAA,CAJA,CAKA;;AACA,UAAA,OAAA,KAAA,IAAA,CANA,CAOA;;AACA,UAAA,GAAA;;AACA,UAAA,UAAA,EAAA,EAAA;AACA,YAAA,MAAA;AAAA,iBAAA,KAAA;AAAA,gBAAA;AAAA,SAAA;AACA,OAXA,CAYA;;;AACA,UAAA,WAAA,IAAA,MAAA,CAAA,mBAAA,CAAA,CAbA,CAcA;;AACA,UAAA,SAAA,IAAA,MAAA,CAAA,qBAAA,CAAA;;AACA,UACA,SAAA,IAAA,CAAA,KAAA,KAAA,MAAA,IAAA,IACA,OAAA,IAAA,CAAA,KAAA,IAAA,KAAA,IAFA,EAGA;AACA;AAEA,aAAA,KAAA,CAAA,QAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA,SANA,EAHA,CAUA;AACA;AACA;;AAEA,UAAA,UAAA,EAAA,EAAA;AACA,YAAA,MAAA;AAAA,iBAAA,KAAA;AAAA,gBAAA;AAAA,SAAA;AACA,OAnCA,CAoCA;;;AACA,UAAA,WAAA,IAAA,MAAA,CACA,wDADA,EAEA,GAFA,CAAA,CArCA,CAyCA;;AACA,UAAA,SAAA,IAAA,MAAA,CAAA,qBAAA,CAAA;;AACA,UACA,SAAA,IAAA,CAAA,KAAA,KAAA,MAAA,IAAA,IACA,OAAA,IAAA,CAAA,KAAA,IAAA,KAAA,IAFA,EAGA;AACA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA,SANA,EAFA,CASA;AACA;AACA;AACA;AAxIA;AARA,CAAA","sourcesContent":["<template>\r\n    <!-- 注册组件 -->\r\n    <div>\r\n        <div class=\"regist_logo\">\r\n            <img src=\"../../../../assets/regist_log.png\" alt=\"\">\r\n        </div>\r\n        <div class=\"regist_span\" @click=\"change\">\r\n            <span id=\"phone\">手机号</span>\r\n            <span id=\"email\">邮箱</span>\r\n        </div>\r\n        <hr>\r\n        <div class=\"regist_fld\" id=\"phone_div\">\r\n            <mt-field @blur.native.capture=\"phon\" v-model=\"phone\" class=\"fld\" placeholder=\"请输入手机号\"></mt-field>\r\n            <mt-field @blur.native.capture=\"pwd\" v-model=\"upwd\" class=\"fld\" placeholder=\"请输入密码\"></mt-field>\r\n        </div>\r\n        <div class=\"regist_fld\" style=\"display:none\" id=\"email_div\">\r\n            <!-- 鼠标失去焦点事件 -->\r\n            <mt-field @blur.native.capture=\"emai\" v-model=\"email\" class=\"fld\" placeholder=\"请输入邮箱\"></mt-field>\r\n            <mt-field @blur.native.capture=\"pwd\" v-model=\"upwd\" class=\"fld\" placeholder=\"请输入密码\"></mt-field>\r\n        </div>\r\n        <div class=\"regist_btn\">\r\n            <mt-button @click=\"reg\" class=\"btn\" type=\"primary\" size=\"large\">注册</mt-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      phone: \"\",\r\n      email: \"\",\r\n      upwd: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    // 手机和邮箱的div转换方法\r\n    change(e) {\r\n      var phone = document.getElementById(\"phone\");\r\n      var phoneDiv = document.getElementById(\"phone_div\");\r\n      var email = document.getElementById(\"email\");\r\n      var emailDiv = document.getElementById(\"email_div\");\r\n      if (e.target == email) {\r\n        phoneDiv.style.display = \"none\";\r\n        emailDiv.style.display = \"\";\r\n      }\r\n      if (e.target == phone) {\r\n        phoneDiv.style.display = \"\";\r\n        emailDiv.style.display = \"none\";\r\n      }\r\n    },\r\n    // 手机输入框失去焦点方法\r\n    phon() {\r\n      if (this.phone !== \"\") {\r\n        // 用户名正则\r\n        var regPhone = new RegExp(/^1[3456789]\\d{9}$/);\r\n        // 判断格式是否正确\r\n        if (regPhone.test(this.phone) === false) {\r\n          this.$toast(\"手机格式不正确\");\r\n        } else {\r\n          // 获取手机号\r\n          var phone = this.phone;\r\n          var obj = { phone: phone };\r\n          console.log(1);\r\n          this.axios(\"regist\", { params: obj }).then(res => {\r\n            console.log(res);\r\n            // 获取服务器返回结果\r\n            if (res.data.code == -1) {\r\n              this.$toast(\"手机号已经被注册\");\r\n            } else if (res.data.code == 1) {\r\n              this.$toast(\"手机号可用\");\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    emai() {\r\n      if (this.email !== \"\") {\r\n        // 用户名正则\r\n        var regEmail = new RegExp(\r\n          \"([0-9A-Za-z-_.]+)@([0-9a-z]+.[a-z]{2,3}(.[a-z]{2})?)$\",\r\n          \"g\"\r\n        );\r\n        // 判断格式是否正确\r\n        if (regEmail.test(this.email) === false) {\r\n          this.$toast(\"邮箱格式不正确\");\r\n        }\r\n      } else {\r\n        // 获取邮箱\r\n        var email = this.email;\r\n        var obj = { email: email };\r\n        this.axios(\"regist\", { params: obj }).then(res => {\r\n          // console.log(res);\r\n          // 获取服务器返回结果\r\n          if (res.data.code == -1) {\r\n            this.$toast(\"邮箱已经被注册\");\r\n          } else if (res.data.code == 1) {\r\n            this.$toast(\"邮箱可用\");\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 密码输入框失去焦点方法\r\n    pwd() {\r\n      if (this.upwd !== \"\") {\r\n        // 密码正则\r\n        var regPwd = new RegExp(/^[a-zA-Z0-9]{4,10}$/);\r\n        // 判断格式是否正确\r\n        if (regPwd.test(this.upwd) === false) {\r\n          this.$toast(\"密码格式不正确\");\r\n        }\r\n      }\r\n    },\r\n    reg() {\r\n      // 获取用户名\r\n      var phone = this.phone;\r\n      // 获取邮箱\r\n      var email = this.email;\r\n      // 获取用户密码\r\n      var upwd = this.upwd;\r\n      // 传递的参数\r\n      var obj;\r\n      if (email === \"\") {\r\n        var obj = { phone: phone, upwd: upwd };\r\n      }\r\n      // 用户名正则\r\n      var regPhone = new RegExp(/^1[3456789]\\d{9}$/);\r\n      // 密码正则\r\n      var regPwd = new RegExp(/^[a-zA-Z0-9]{4,10}$/);\r\n      if (\r\n        regPhone.test(this.phone) === true &&\r\n        regPwd.test(this.upwd) == true\r\n      ) {\r\n        // 发送ajax请求\r\n\r\n        this.axios(\"regist\", { params: obj }).then(res => {\r\n          // 获取服务器返回结果\r\n          //   console.log(res);\r\n          if (res.data.code == 1) {\r\n            this.$router.push(\"/login\");\r\n          }\r\n        });\r\n      // } else {\r\n      //   this.$toast(\"请输入正确的手机号和密码\");\r\n      }\r\n\r\n      if (phone === \"\") {\r\n        var obj = { email: email, upwd: upwd };\r\n      }\r\n      //   邮箱正则\r\n      var regEmail = new RegExp(\r\n        \"^([0-9A-Za-z-_.]+)@([0-9a-z]+.[a-z]{2,3}(.[a-z]{2})?)$\",\r\n        \"g\"\r\n      );\r\n      // 密码正则\r\n      var regPwd = new RegExp(/^[a-zA-Z0-9]{4,10}$/);\r\n      if (\r\n        regEmail.test(this.email) === true &&\r\n        regPwd.test(this.upwd) == true\r\n      ) {\r\n          // 发送ajax请求\r\n          this.axios(\"regist\", { params: obj }).then(res => {\r\n          // 获取服务器返回结果\r\n          //   console.log(res);\r\n          if (res.data.code == 1) {\r\n            this.$router.push(\"/login\");\r\n          }\r\n        });\r\n        // } else {\r\n        //   this.$toast(\"请输入正确的邮箱和密码\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* logo容器 */\r\ndiv.regist_logo {\r\n  width: 100%;\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}\r\n/* logo */\r\ndiv.regist_logo img {\r\n  width: 100px;\r\n}\r\n/* span容器样式 */\r\ndiv.regist_span {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin: 10px;\r\n}\r\n/* 文本输入框 */\r\ndiv.regist_fld {\r\n  margin: 25px 0px 40px 0px;\r\n}\r\n.fld {\r\n  border: 1px solid #ccc;\r\n  margin: 10px 0;\r\n}\r\n/* 按钮 */\r\ndiv.regist_btn {\r\n  text-align: center;\r\n}\r\n.btn {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components\\ch\\common\\second-search"}]}