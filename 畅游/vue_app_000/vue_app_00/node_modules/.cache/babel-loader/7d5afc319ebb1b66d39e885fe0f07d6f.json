{"remainingRequest":"C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\src\\components\\ch\\common\\First-home\\ChatFunction-3.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\src\\components\\ch\\common\\First-home\\ChatFunction-3.vue","mtime":1566357057560},{"path":"C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1565790049339},{"path":"C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1565790048597},{"path":"C:\\Users\\web\\Desktop\\团队项目\\Tour\\畅游\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1565790072862}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      placeholder: \"搜索\",\n      list: [],\n      kwords: \"\",\n      //自动添加了kwords()来监视kwords的变化\n      download: false,\n      text1: \"轻触即可聊天\"\n    };\n  },\n  props: {\n    searchiconimg: {\n      default: \"\"\n    },\n    quitchatfunction2: {\n      type: Function\n    },\n    phonesearchicon: {\n      default: \"\"\n    },\n    searchdel: {\n      default: \"\"\n    }\n  },\n  methods: {\n    searchfriend: function searchfriend() {\n      var _this = this;\n\n      //获取搜索框中输入的信息\n      // 当输入内容后，删除照隐藏消除，\n      this.download = !this.download; //  console.log(`查找 ${this.kwords} 相关的内容...`)\n\n      var uname = this.kwords; // console.log(uname);\n      //获取到名字信息后，通过名字在已关注用户列表中搜索相应的用户\n\n      var url = \"ChatFunction2\";\n      var obj = {\n        uname: uname\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        if (result.data.data.length == 0) {\n          _this.$messagebox(\"搜查结果\", \"该用户不存在\");\n        } else {\n          var list = result.data.data;\n          _this.list = list;\n        }\n      });\n    },\n    searchdelicon: function searchdelicon() {\n      //当点击x删除后，搜索内容为空，则删除照隐藏\n      this.kwords = \"\";\n    },\n    chatfriend: function chatfriend(e) {\n      //获取点击事件的id值\n      var id = e.target.dataset.id; // var obj={uid:id};\n      //路由隐藏传参\n\n      this.$router.push('/ChatFunction4/' + id);\n    }\n  },\n  watch: {\n    //只要同名的变量的值发生了变化，就会自动触发监视函数。\n    kwords: function kwords() {\n      //每次输入时，做的事儿和按下回车时，和点击查询按钮时，做的事儿都是一样！\n      this.searchfriend(); //this->凡是new Vue()中的this，都指new Vue()本身\n      //为什么watch中的kwords()可通过this.search()调用methods中的search()方法？\n      //因为不管写在哪里，最后都被升级为直接隶属于new Vue()，所以其实kwords()searchfriend()是平级的兄弟方法！\n    }\n  }\n};",{"version":3,"sources":["ChatFunction-3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,mBAAA,IADA;AAEA,YAAA,EAFA;AAGA,cAAA,EAHA;AAGA;AACA,gBAAA,KAJA;AAKA,aAAA;AALA,KAAA;AAOA,GATA;AAUA,SAAA;AACA,mBAAA;AAAA,eAAA;AAAA,KADA;AAEA,uBAAA;AAAA,YAAA;AAAA,KAFA;AAGA,qBAAA;AAAA,eAAA;AAAA,KAHA;AAIA,eAAA;AAAA,eAAA;AAAA;AAJA,GAVA;AAgBA,WAAA;AACA,gBADA,0BACA;AAAA;;AAAA;AACA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA,CAFA,CAGA;;AACA,UAAA,QAAA,KAAA,MAAA,CAJA,CAKA;AACA;;AACA,UAAA,MAAA,eAAA;AACA,UAAA,MAAA;AAAA,eAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,kBAAA;AACA,YAAA,OAAA,IAAA,CAAA,IAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,gBAAA,WAAA,CAAA,MAAA,EAAA,QAAA;AACA,SAFA,MAEA;AACA,cAAA,OAAA,OAAA,IAAA,CAAA,IAAA;AACA,gBAAA,IAAA,GAAA,IAAA;AACA;AACA,OAPA;AAQA,KAlBA;AAmBA,iBAnBA,2BAmBA;AAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,KArBA;AAsBA,cAtBA,sBAsBA,CAtBA,EAsBA;AAAA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CADA,CAEA;AACA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AACA;AA3BA,GAhBA;AA6CA,SAAA;AACA;AACA,UAFA,oBAEA;AACA;AACA,WAAA,YAAA,GAFA,CAGA;AACA;AACA;AACA;AARA;AA7CA,CAAA","sourcesContent":["<template>\r\n    <div id=\"chatfuncton2\">\r\n        <div id=\"chatfuncton2-1\">\r\n            <div id=\"chatfunction-input\">\r\n                <input class=\"inputchatfunction\" type=\"text\" \r\n                :placeholder=\"placeholder\" \r\n                v-model=\"kwords\"\r\n                />\r\n                <img class=\"searchiconimg\" :src=\"searchiconimg\" />\r\n                <img v-show=\"download\" class=\"searchdel\" :src=\"searchdel\" @click=\"searchdelicon\"/>\r\n            </div>\r\n            <span class=\"chatfunction2span\" @click=\"quitchatfunction2\">取消</span>\r\n        </div>\r\n        <div id=\"chatfuncton2-2\">\r\n            <div id=\"suggest-msg-1\" v-for=\"(item,i) of list\" :key=\"i\">\r\n                <img class=\"phonesearch\" :src=\"phonesearchicon\" />\r\n                <img class=\"msgimg-1\" :src=\"'http://127.0.0.1:3000/'+item.uheadurl\" />\r\n                <span class=\"msgname-1\">{{item.uname}}</span>\r\n                <span :data-id=\"item.uid\" @click=\"chatfriend\" class=\"textchatfunction\">{{text1}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n             placeholder:\"搜索\",\r\n             list:[],\r\n             kwords:\"\",//自动添加了kwords()来监视kwords的变化\r\n             download:false,\r\n             text1:\"轻触即可聊天\"\r\n        }\r\n    },\r\n    props:{\r\n        searchiconimg:{default:\"\"},\r\n        quitchatfunction2:{type:Function},\r\n        phonesearchicon:{default:\"\"},\r\n        searchdel:{default:\"\"}\r\n    },\r\n    methods: {\r\n        searchfriend(){//获取搜索框中输入的信息\r\n            // 当输入内容后，删除照隐藏消除，\r\n            this.download=!this.download;\r\n            //  console.log(`查找 ${this.kwords} 相关的内容...`)\r\n            var uname=this.kwords;\r\n            // console.log(uname);\r\n            //获取到名字信息后，通过名字在已关注用户列表中搜索相应的用户\r\n            var url=\"ChatFunction2\";\r\n            var obj={uname:uname};\r\n            this.axios.get(url,{params:obj}).then(result=>{\r\n                if(result.data.data.length==0){\r\n                    this.$messagebox(\"搜查结果\",\"该用户不存在\");\r\n                }else{\r\n                    var list=result.data.data;\r\n                    this.list=list;\r\n                }\r\n            })\r\n        },\r\n        searchdelicon(){//当点击x删除后，搜索内容为空，则删除照隐藏\r\n            this.kwords=\"\";\r\n        },\r\n        chatfriend(e){//获取点击事件的id值\r\n            var id=e.target.dataset.id;\r\n            // var obj={uid:id};\r\n            //路由隐藏传参\r\n            this.$router.push('/ChatFunction4/'+id);\r\n        }\r\n    },\r\n    watch:{\r\n        //只要同名的变量的值发生了变化，就会自动触发监视函数。\r\n        kwords(){\r\n            //每次输入时，做的事儿和按下回车时，和点击查询按钮时，做的事儿都是一样！\r\n            this.searchfriend();\r\n            //this->凡是new Vue()中的this，都指new Vue()本身\r\n            //为什么watch中的kwords()可通过this.search()调用methods中的search()方法？\r\n            //因为不管写在哪里，最后都被升级为直接隶属于new Vue()，所以其实kwords()searchfriend()是平级的兄弟方法！\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    #chatfuncton2-1{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    #chatfunction-input{\r\n        width:80%;\r\n    }\r\n    .inputchatfunction{\r\n        width:100%;\r\n    }\r\n    .chatfunction2span{\r\n        margin-right: 15px;\r\n    }\r\n    .searchdel{\r\n        display: block;\r\n        margin:-16px 0 0 279px;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\ch\\common\\First-home"}]}